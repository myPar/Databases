--Database DDL--

CREATE TABLE  "COUNTRIES" 
(
	"COUNTRY_ID" CHAR(2) CONSTRAINT "COUNTRY_ID_NN" NOT NULL ENABLE, 
	"COUNTRY_NAME" VARCHAR2(40), 
	"REGION_ID" NUMBER, 
	CONSTRAINT "COUNTRY_C_ID_PK" PRIMARY KEY ("COUNTRY_ID") ENABLE, 
	CONSTRAINT "COUNTR_REG_FK" FOREIGN KEY ("REGION_ID")
	REFERENCES  "REGIONS" ("REGION_ID") ENABLE
)

CREATE TABLE  "DEPARTMENTS" 
(
	"DEPARTMENT_ID" NUMBER(4,0), 
	"DEPARTMENT_NAME" VARCHAR2(30) CONSTRAINT "DEPT_NAME_NN" NOT NULL ENABLE, 
	"MANAGER_ID" NUMBER(6,0), 
	"LOCATION_ID" NUMBER(4,0), 
	CONSTRAINT "DEPT_ID_PK" PRIMARY KEY ("DEPARTMENT_ID") ENABLE, 
	CONSTRAINT "DEPT_LOC_FK" FOREIGN KEY ("LOCATION_ID")
	REFERENCES  "LOCATIONS" ("LOCATION_ID") ENABLE, 
	CONSTRAINT "DEPT_MGR_FK" FOREIGN KEY ("MANAGER_ID")
	REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") ENABLE
)

CREATE TABLE  "LOCATIONS" 
(
	"LOCATION_ID" NUMBER(4,0), 
	"STREET_ADDRESS" VARCHAR2(40), 
	"POSTAL_CODE" VARCHAR2(12), 
	"CITY" VARCHAR2(30) CONSTRAINT "LOC_CITY_NN" NOT NULL ENABLE, 
	"STATE_PROVINCE" VARCHAR2(25), 
	"COUNTRY_ID" CHAR(2), 
		CONSTRAINT "LOC_ID_PK" PRIMARY KEY ("LOCATION_ID") ENABLE, 
		CONSTRAINT "LOC_C_ID_FK" FOREIGN KEY ("COUNTRY_ID")
		REFERENCES  "COUNTRIES" ("COUNTRY_ID") ENABLE
)

CREATE TABLE  "EMPLOYEES" 
   (	
    "EMPLOYEE_ID" NUMBER(6,0), 
	"FIRST_NAME" VARCHAR2(20), 
	"LAST_NAME" VARCHAR2(25) CONSTRAINT "EMP_LAST_NAME_NN" NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(25) CONSTRAINT "EMP_EMAIL_NN" NOT NULL ENABLE, 
	"PHONE_NUMBER" VARCHAR2(20), 
	"HIRE_DATE" DATE CONSTRAINT "EMP_HIRE_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10) CONSTRAINT "EMP_JOB_NN" NOT NULL ENABLE, 
	"SALARY" NUMBER(8,2), 
	"COMMISSION_PCT" NUMBER(2,2), 
	"MANAGER_ID" NUMBER(6,0), 
	"DEPARTMENT_ID" NUMBER(4,0), 
	 CONSTRAINT "EMP_SALARY_MIN" CHECK (salary > 0) ENABLE, 
	 CONSTRAINT "EMP_EMAIL_UK" UNIQUE ("EMAIL") ENABLE, 
	 CONSTRAINT "EMP_EMP_ID_PK" PRIMARY KEY ("EMPLOYEE_ID") ENABLE, 
	 CONSTRAINT "EMP_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES  "DEPARTMENTS" ("DEPARTMENT_ID") ENABLE, 
	 CONSTRAINT "EMP_JOB_FK" FOREIGN KEY ("JOB_ID")
	  REFERENCES  "JOBS" ("JOB_ID") ENABLE, 
	 CONSTRAINT "EMP_MANAGER_FK" FOREIGN KEY ("MANAGER_ID")
	  REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") ENABLE
   )

CREATE TABLE  "REGIONS" 
   (	
    "REGION_ID" NUMBER CONSTRAINT "REGION_ID_NN" NOT NULL ENABLE, 
	"REGION_NAME" VARCHAR2(25), 
	 CONSTRAINT "REG_ID_PK" PRIMARY KEY ("REGION_ID") ENABLE
   )

CREATE TABLE  "JOBS" 
(	
	"JOB_ID" VARCHAR2(10), 
	"JOB_TITLE" VARCHAR2(35) CONSTRAINT "JOB_TITLE_NN" NOT NULL ENABLE, 
	"MIN_SALARY" NUMBER(6,0), 
	"MAX_SALARY" NUMBER(6,0), 
		CONSTRAINT "JOB_ID_PK" PRIMARY KEY ("JOB_ID") ENABLE
)

CREATE TABLE  "JOB_HISTORY" 
   (
	"EMPLOYEE_ID" NUMBER(6,0) CONSTRAINT "JHIST_EMPLOYEE_NN" NOT NULL ENABLE, 
	"START_DATE" DATE CONSTRAINT "JHIST_START_DATE_NN" NOT NULL ENABLE, 
	"END_DATE" DATE CONSTRAINT "JHIST_END_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10) CONSTRAINT "JHIST_JOB_NN" NOT NULL ENABLE, 
	"DEPARTMENT_ID" NUMBER(4,0), 
	 CONSTRAINT "JHIST_DATE_INTERVAL" CHECK (end_date > start_date) ENABLE, 
	 CONSTRAINT "JHIST_EMP_ID_ST_DATE_PK" PRIMARY KEY ("EMPLOYEE_ID", "START_DATE") ENABLE, 
	 CONSTRAINT "JHIST_JOB_FK" FOREIGN KEY ("JOB_ID")
	  REFERENCES  "JOBS" ("JOB_ID") ENABLE, 
	 CONSTRAINT "JHIST_EMP_FK" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") ENABLE, 
	 CONSTRAINT "JHIST_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES  "DEPARTMENTS" ("DEPARTMENT_ID") ENABLE
   )

---QUERIES:---

---1.
SELECT COUNTRIES.COUNTRY_NAME, COUNTRIES.COUNTRY_ID, COUNT(DEPARTMENT_ID) as departments_count FROM

COUNTRIES INNER JOIN
 (
  SELECT DEPARTMENTS.DEPARTMENT_ID, LOCATIONS.LOCATION_ID, LOCATIONS.COUNTRY_ID FROM
  DEPARTMENTS INNER JOIN LOCATIONS 
  ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
 ) tab
ON COUNTRIES.COUNTRY_ID = tab.COUNTRY_ID
GROUP BY COUNTRIES.COUNTRY_NAME, COUNTRIES.COUNTRY_ID
ORDER BY COUNTRIES.COUNTRY_NAME, COUNTRIES.COUNTRY_ID, departments_count DESC

---2.

SELECT COUNT(*) AS managers_in_uk FROM 
(
    SELECT UNIQUE MANAGER_ID FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN
    (
    SELECT DEPARTMENT_ID FROM
    DEPARTMENTS INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
    WHERE LOCATIONS.COUNTRY_ID IN (SELECT COUNTRIES.COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME = 'United Kingdom')
    )
)

---3.

SELECT COUNT(*) AS europe_employees_count FROM
EMPLOYEES
WHERE EMPLOYEES.DEPARTMENT_ID IN

(
SELECT DEPARTMENTS.DEPARTMENT_ID FROM

DEPARTMENTS INNER JOIN LOCATIONS
ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID

WHERE LOCATIONS.COUNTRY_ID IN
(
SELECT COUNTRIES.COUNTRY_ID FROM
COUNTRIES INNER JOIN (SELECT REGIONS.REGION_ID FROM REGIONS WHERE REGIONS.REGION_NAME = 'Europe') t
ON COUNTRIES.REGION_ID = t.REGION_ID
)
)

---4. 
SELECT AVG(EMPLOYEES.SALARY) AS eu_empl_avg_salary FROM
EMPLOYEES
WHERE EMPLOYEES.DEPARTMENT_ID IN

(
SELECT DEPARTMENTS.DEPARTMENT_ID FROM

DEPARTMENTS INNER JOIN LOCATIONS
ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID

WHERE LOCATIONS.COUNTRY_ID IN
(
SELECT COUNTRIES.COUNTRY_ID FROM
COUNTRIES INNER JOIN (SELECT REGIONS.REGION_ID FROM REGIONS WHERE REGIONS.REGION_NAME = 'Europe') t
ON COUNTRIES.REGION_ID = t.REGION_ID
)
)

---5.
SELECT SUM(EMPLOYEES.SALARY) AS uk_empl_sum_salary FROM
EMPLOYEES
WHERE EMPLOYEES.DEPARTMENT_ID IN

(
SELECT DEPARTMENTS.DEPARTMENT_ID FROM

DEPARTMENTS INNER JOIN LOCATIONS
ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID

WHERE LOCATIONS.COUNTRY_ID IN
(
SELECT COUNTRIES.COUNTRY_ID FROM
COUNTRIES WHERE COUNTRIES.COUNTRY_NAME = 'United Kingdom'
)
)

---6.
SELECT t1.DEPARTMENT_ID, t2.DEPARTMENT_NAME, t1.empl_count FROM

(SELECT * FROM
(
SELECT EMPLOYEES.DEPARTMENT_ID, COUNT(EMPLOYEES.EMPLOYEE_ID) AS empl_count FROM
EMPLOYEES WHERE EMPLOYEES.DEPARTMENT_ID IS NOT NULL

GROUP BY EMPLOYEES.DEPARTMENT_ID
ORDER BY empl_count DESC
)
WHERE rownum = 1
) t1
INNER JOIN (SELECT DEPARTMENTS.DEPARTMENT_NAME, DEPARTMENTS.DEPARTMENT_ID FROM DEPARTMENTS) t2
ON t1.DEPARTMENT_ID = t2.DEP

---7.

SELECT STREET_ADDRESS FROM LOCATIONS WHERE LOCATIONS.CITY = 'Tokyo'

---8.
SELECT DISTINCT t1.DEPARTMENT_NAME, t2.JOB_TITLE FROM
(SELECT DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME FROM DEPARTMENTS) t1

INNER JOIN

(SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.DEPARTMENT_ID, JOBS.JOB_ID,  JOBS.JOB_TITLE FROM
EMPLOYEES INNER JOIN JOBS ON
EMPLOYEES.JOB_ID = JOBS.JOB_ID) t2

ON t1.DEPARTMENT_ID = t2.DEPARTMENT_ID
ORDER BY t1.DEPARTMENT_NAME, t2.JOB_TITLE

---9.

SELECT DEPARTMENTS.DEPARTMENT_ID, COUNT(managers_data.EMPLOYEE_ID) as managers_count FROM

(SELECT employees.EMPLOYEE_ID, employees.DEPARTMENT_ID  FROM
(SELECT DISTINCT EMPLOYEES.MANAGER_ID FROM EMPLOYEES WHERE EMPLOYEES.MANAGER_ID IS NOT NULL) managers_identifiers
INNER JOIN (SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.DEPARTMENT_ID FROM EMPLOYEES) employees
ON managers_identifiers.MANAGER_ID = employees.EMPLOYEE_ID ) managers_data

INNER JOIN DEPARTMENTS

ON DEPARTMENTS.DEPARTMENT_ID = managers_data.DEPARTMENT_ID

GROUP BY DEPARTMENTS.DEPARTMENT_ID
ORDER BY DEPARTMENTS.DEPARTMENT_ID, managers_count

---10.

SELECT DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, COUNT(EMPLOYEES.EMPLOYEE_ID) AS employees_count
FROM
DEPARTMENTS INNER JOIN EMPLOYEES
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
ORDER BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, employees_count

---11.

SELECT DISTINCT loc_jobs.JOB_TITLE AS america_jobs FROM

(SELECT DISTINCT dep.LOCATION_ID, jobs_dep.JOB_ID, jobs_dep.JOB_TITLE FROM
(SELECT JOBS.JOB_ID, JOBS.JOB_TITLE, EMPLOYEES.DEPARTMENT_ID FROM
EMPLOYEES INNER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEES.JOB_ID) jobs_dep
INNER JOIN 

(SELECT DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.LOCATION_ID FROM DEPARTMENTS) dep

ON dep.DEPARTMENT_ID = jobs_dep.DEPARTMENT_ID) loc_jobs

INNER JOIN

(SELECT LOCATIONS.LOCATION_ID FROM LOCATIONS WHERE LOCATIONS.COUNTRY_ID IN 
(
SELECT COUNTRIES.COUNTRY_ID FROM COUNTRIES WHERE COUNTRIES.REGION_ID IN 
(
SELECT REGIONS.REGION_ID FROM REGIONS WHERE REGIONS.REGION_NAME = 'Americas'
)
)) america_loc

ON america_loc.LOCATION_ID = loc_jobs.LOCATION_ID

ORDER BY america_jobs 
---12.

SELECT JOBS.JOB_ID, COUNT(EMPLOYEES.EMPLOYEE_ID) AS employees_count FROM
JOBS INNER JOIN EMPLOYEES
ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
GROUP BY JOBS.JOB_ID
ORDER BY JOBS.JOB_ID, employees_count

---13.

SELECT EMPLOYEES.EMPLOYEE_ID FROM
EMPLOYEES INNER JOIN JOB_HISTORY
ON EMPLOYEES.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID
GROUP BY EMPLOYEES.EMPLOYEE_ID
HAVING COUNT(JOB_HISTORY.JOB_ID) > 1
ORDER BY EMPLOYEES.EMPLOYEE_ID
---14.

SELECT loc_countries.COUNTRY_ID, SUM(loc_sal.SALARY) AS sum_country_salary FROM
(SELECT EMPLOYEES.SALARY, DEPARTMENTS.LOCATION_ID FROM
EMPLOYEES INNER JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID) loc_sal

INNER JOIN

(SELECT COUNTRIES.COUNTRY_ID, LOCATIONS.LOCATION_ID FROM
COUNTRIES INNER JOIN LOCATIONS
ON COUNTRIES.COUNTRY_ID = LOCATIONS.COUNTRY_ID
) loc_countries
ON loc_countries.LOCATION_ID = loc_sal.LOCATION_ID

GROUP BY loc_countries.COUNTRY_ID
ORDER BY COUNTRY_ID, sum_country_salary

---15.

SELECT DISTINCT loc_jobs.JOB_ID AS america_jobs FROM

(SELECT DISTINCT dep.LOCATION_ID, jobs_dep.JOB_ID FROM
(SELECT JOBS.JOB_ID, EMPLOYEES.DEPARTMENT_ID FROM
EMPLOYEES INNER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEES.JOB_ID) jobs_dep
INNER JOIN 

(SELECT DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.LOCATION_ID FROM DEPARTMENTS) dep

ON dep.DEPARTMENT_ID = jobs_dep.DEPARTMENT_ID) loc_jobs

INNER JOIN

(SELECT LOCATIONS.LOCATION_ID FROM LOCATIONS WHERE LOCATIONS.COUNTRY_ID IN 
(
SELECT COUNTRIES.COUNTRY_ID FROM COUNTRIES WHERE COUNTRIES.REGION_ID IN 
(
SELECT REGIONS.REGION_ID FROM REGIONS WHERE REGIONS.REGION_NAME = 'Americas'
)
)) america_loc

ON america_loc.LOCATION_ID = loc_jobs.LOCATION_ID

ORDER BY america_jobs 